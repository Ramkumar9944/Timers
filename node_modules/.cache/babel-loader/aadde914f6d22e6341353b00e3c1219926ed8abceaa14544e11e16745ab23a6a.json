{"ast":null,"code":"var _jsxFileName = \"/home/ram/Documents/Ghost/Frontend/react-timer/src/components/Timer.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from \"react\";\nimport Container from \"./UI/Container\";\nimport { useTimersContext } from \"../store/timers-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Timer({\n  name,\n  duration\n}) {\n  _s();\n  const interval = useRef(null);\n  const [remainingTime, setRemainingTime] = useState(duration * 1000);\n  const {\n    isRunning\n  } = useTimersContext();\n  if (remainingTime <= 0 && interval.current) {\n    clearInterval(interval.current);\n  }\n  useEffect(() => {\n    let timer;\n    if (isRunning) {\n      timer = setInterval(function () {\n        setRemainingTime(prevTime => prevTime - 50);\n      }, 50);\n      interval.current = timer;\n    } else if (interval.current) {\n      clearInterval(interval.current);\n    }\n    return () => clearInterval(timer);\n  }, [isRunning]);\n  const formattedRemainingTime = (remainingTime / 1000).toFixed(2);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    as: \"article\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"progress\", {\n        max: duration * 1000,\n        value: remainingTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: formattedRemainingTime\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(Timer, \"hRyY5caIdiXMaxo4WeaA0me7Cbk=\", false, function () {\n  return [useTimersContext];\n});\n_c = Timer;\nvar _c;\n$RefreshReg$(_c, \"Timer\");","map":{"version":3,"names":["useEffect","useRef","useState","Container","useTimersContext","jsxDEV","_jsxDEV","Timer","name","duration","_s","interval","remainingTime","setRemainingTime","isRunning","current","clearInterval","timer","setInterval","prevTime","formattedRemainingTime","toFixed","as","children","fileName","_jsxFileName","lineNumber","columnNumber","max","value","_c","$RefreshReg$"],"sources":["/home/ram/Documents/Ghost/Frontend/react-timer/src/components/Timer.tsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\n\nimport Container from \"./UI/Container\";\nimport {\n  useTimersContext,\n  type Timer as TimerProps,\n} from \"../store/timers-context\";\n\nexport default function Timer({ name, duration }: TimerProps) {\n  const interval = useRef<NodeJS.Timeout | null>(null);\n  const [remainingTime, setRemainingTime] = useState(duration * 1000);\n  const { isRunning } = useTimersContext();\n\n  if (remainingTime <= 0 && interval.current) {\n    clearInterval(interval.current);\n  }\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n\n    if (isRunning) {\n      timer = setInterval(function () {\n        setRemainingTime((prevTime) => prevTime - 50);\n      }, 50);\n      interval.current = timer;\n    } else if (interval.current) {\n      clearInterval(interval.current);\n    }\n\n    return () => clearInterval(timer);\n  }, [isRunning]);\n\n  const formattedRemainingTime = (remainingTime / 1000).toFixed(2);\n\n  return (\n    <Container as=\"article\">\n      <h2>{name}</h2>\n      <p>\n        <progress max={duration * 1000} value={remainingTime} />\n      </p>\n      <p>{formattedRemainingTime}</p>\n    </Container>\n  );\n}\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,OAAOC,SAAS,MAAM,gBAAgB;AACtC,SACEC,gBAAgB,QAEX,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,eAAe,SAASC,KAAKA,CAAC;EAAEC,IAAI;EAAEC;AAAqB,CAAC,EAAE;EAAAC,EAAA;EAC5D,MAAMC,QAAQ,GAAGV,MAAM,CAAwB,IAAI,CAAC;EACpD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGX,QAAQ,CAACO,QAAQ,GAAG,IAAI,CAAC;EACnE,MAAM;IAAEK;EAAU,CAAC,GAAGV,gBAAgB,CAAC,CAAC;EAExC,IAAIQ,aAAa,IAAI,CAAC,IAAID,QAAQ,CAACI,OAAO,EAAE;IAC1CC,aAAa,CAACL,QAAQ,CAACI,OAAO,CAAC;EACjC;EAEAf,SAAS,CAAC,MAAM;IACd,IAAIiB,KAAqB;IAEzB,IAAIH,SAAS,EAAE;MACbG,KAAK,GAAGC,WAAW,CAAC,YAAY;QAC9BL,gBAAgB,CAAEM,QAAQ,IAAKA,QAAQ,GAAG,EAAE,CAAC;MAC/C,CAAC,EAAE,EAAE,CAAC;MACNR,QAAQ,CAACI,OAAO,GAAGE,KAAK;IAC1B,CAAC,MAAM,IAAIN,QAAQ,CAACI,OAAO,EAAE;MAC3BC,aAAa,CAACL,QAAQ,CAACI,OAAO,CAAC;IACjC;IAEA,OAAO,MAAMC,aAAa,CAACC,KAAK,CAAC;EACnC,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,MAAMM,sBAAsB,GAAG,CAACR,aAAa,GAAG,IAAI,EAAES,OAAO,CAAC,CAAC,CAAC;EAEhE,oBACEf,OAAA,CAACH,SAAS;IAACmB,EAAE,EAAC,SAAS;IAAAC,QAAA,gBACrBjB,OAAA;MAAAiB,QAAA,EAAKf;IAAI;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfrB,OAAA;MAAAiB,QAAA,eACEjB,OAAA;QAAUsB,GAAG,EAAEnB,QAAQ,GAAG,IAAK;QAACoB,KAAK,EAAEjB;MAAc;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eACJrB,OAAA;MAAAiB,QAAA,EAAIH;IAAsB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEhB;AAACjB,EAAA,CAnCuBH,KAAK;EAAA,QAGLH,gBAAgB;AAAA;AAAA0B,EAAA,GAHhBvB,KAAK;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}